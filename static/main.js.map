{"version":3,"sources":["./src/app/components/about/about.component.ts","./src/app/components/about/about.component.html","./src/app/models/user-model.ts","./src/app/components/diagnose/diagnose.component.ts","./src/app/components/diagnose/diagnose.component.html","./src/app/modules/material/material.module.ts","./src/app/components/register-login-dialog/register-login-dialog.component.ts","./src/app/components/register-login-dialog/register-login-dialog.component.html","./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/contact/contact.component.ts","./src/app/components/contact/contact.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/app/app.module.ts","./src/app/components/nav-bar/nav-bar.component.ts","./src/app/components/nav-bar/nav-bar.component.html","./src/app/services/auth.service.ts","./src/app/services/image.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about',\r\n  templateUrl: './about.component.html',\r\n  styleUrls: ['./about.component.css']\r\n})\r\nexport class AboutComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h2>only to logged in users</h2>\r\n<p>about works!</p>\r\n","export class Users {\r\n  username: string = '';\r\n  password: string = '';\r\n  cPassword: string = '';\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { ImageService } from 'src/app/services/image.service';\r\n\r\n@Component({\r\n  selector: 'app-diagnose',\r\n  templateUrl: './diagnose.component.html',\r\n  styleUrls: ['./diagnose.component.css'],\r\n})\r\nexport class DiagnoseComponent implements OnInit {\r\n  //var\r\n  extractedImageBase64: SafeResourceUrl | any;\r\n  enhancedImageBase64: SafeResourceUrl | any;\r\n  imageFile: { file: any; name: string; imageURL: string } | any;\r\n  // var\r\n  constructor(\r\n    private imageService: ImageService,\r\n    private _sanitizer: DomSanitizer\r\n  ) {}\r\n\r\n  ngOnInit(): void {}\r\n  onImageSelect(event: any) {\r\n    console.log('image select call hua');\r\n    if (event.target.files.length > 0) {\r\n      const file = event.target.files[0];\r\n      // console.log(file);\r\n      // this.ImageForm.get('image').setValue(file.filename);\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = (_event) => {\r\n        this.imageFile = {\r\n          file: file,\r\n          name: file.filename,\r\n          imageURL: reader.result as string,\r\n        };\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  }\r\n  submitImageForm() {\r\n    console.log('form submit hua');\r\n    if (this.imageFile) {\r\n      const formData = new FormData();\r\n      formData.append('file', this.imageFile.file);\r\n      // console.log(this.ImageForm.get('image').value);\r\n      this.imageService.postImage(formData).subscribe((res: any) => {\r\n        console.log(res);\r\n        this.extractedImageBase64 = this._sanitizer.bypassSecurityTrustResourceUrl(\r\n          'data:image/jpg;charset=utf-8;base64,' +\r\n            res['encoded_extration_image']\r\n        );\r\n        this.enhancedImageBase64 = this._sanitizer.bypassSecurityTrustResourceUrl(\r\n          'data:image/jpg;charset=utf-8;base64,' + res['encoded_enhanced_image']\r\n        );\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <form (ngSubmit)=\"submitImageForm()\" enctype=\"multipart/form-data\">\r\n    <div class=\"form-group form-row\">\r\n      <label>select an image </label>\r\n      <br />\r\n      <input\r\n        type=\"file\"\r\n        id=\"image\"\r\n        accept=\"image/*\"\r\n        (change)=\"onImageSelect($event)\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"form-group form-row\">\r\n      <!-- <label>select an image</label> -->\r\n      <input type=\"submit\" class=\"btn btn-primary\" />\r\n    </div>\r\n  </form>\r\n  <br /><br /><br />\r\n  <h1>Orignal image</h1>\r\n  <img [src]=\"imageFile.imageURL\" height=\"200\" *ngIf=\"imageFile.imageURL\" />\r\n  <br /><br /><br />\r\n  <h1>Extracted image</h1>\r\n  <img [src]=\"extractedImageBase64\" height=\"200\" *ngIf=\"extractedImageBase64\" />\r\n  <br /><br /><br />\r\n  <h1>Enhance image</h1>\r\n  <img [src]=\"enhancedImageBase64\" height=\"200\" *ngIf=\"enhancedImageBase64\" />\r\n</div>\r\n<br /><br /><br />\r\n","import { NgModule } from '@angular/core';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\n\r\nconst material = [\r\n  MatButtonModule,\r\n  MatToolbarModule,\r\n  MatDialogModule,\r\n  MatTabsModule,\r\n  MatIconModule,\r\n  MatFormFieldModule,\r\n  FormsModule,\r\n  MatInputModule,\r\n  MatCardModule,\r\n  MatTabsModule,\r\n  MatFormFieldModule,\r\n  MatButtonModule,\r\n  MatCheckboxModule,\r\n  MatIconModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: [material],\r\n  exports: [material],\r\n})\r\nexport class MaterialModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Users } from 'src/app/models/user-model';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-register-login-dialog',\r\n  templateUrl: './register-login-dialog.component.html',\r\n  styleUrls: ['./register-login-dialog.component.css'],\r\n})\r\nexport class RegisterLoginDialogComponent implements OnInit {\r\n  //var\r\n\r\n  hide: boolean = true;\r\n\r\n  // loginUserData = {\r\n  //   username: '',\r\n  //   password: '',\r\n  // };\r\n  loginUserData: Users = new Users();\r\n  registerUserData: Users = new Users();\r\n\r\n  // registerUserData = {\r\n  //   username: '',\r\n  //   password: '',\r\n  //   cPassword: '',\r\n  // };\r\n  //var\r\n\r\n  constructor(private _auth: AuthService, private route: Router) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  //form functions\r\n\r\n  btnRegisterClick() {\r\n    console.log('btn register click');\r\n    console.log(this.registerUserData);\r\n  }\r\n  registerFormSubmit() {\r\n    console.log('register form submit');\r\n    this._auth.registerUser(this.registerUserData).subscribe((res: any) => {\r\n      console.log(res);\r\n    });\r\n  }\r\n\r\n  btnLoginClick() {\r\n    console.log('btn login click');\r\n    // console.log(this.loginUserData);\r\n  }\r\n  loginFormSubmit() {\r\n    console.log('login form submit');\r\n    this._auth.loginUser(this.loginUserData).subscribe((res: any) => {\r\n      // console.log(res['token']);\r\n      localStorage.setItem('token', res['token']);\r\n      window.location.reload();\r\n      // console.log('from storage=>>>>>>>>> ' + localStorage.getItem('token'));\r\n    });\r\n  }\r\n\r\n  //form functions\r\n}\r\n","<div class=\"login-page\">\r\n  <mat-tab-group color=\"accent\">\r\n    <mat-tab label=\"Login\">\r\n      <div class=\"formSpace\">\r\n        <form (ngSubmit)=\"loginFormSubmit()\">\r\n          <mat-form-field color=\"accent\" style=\"display: block\">\r\n            <input\r\n              matInput\r\n              placeholder=\"Username\"\r\n              type=\"text\"\r\n              required\r\n              name=\"username\"\r\n              [(ngModel)]=\"loginUserData.username\"\r\n              #username=\"ngModel\"\r\n            />\r\n            <mat-error *ngIf=\"username.errors && username.errors.required\">\r\n              Username is required\r\n            </mat-error>\r\n\r\n            <mat-icon matSuffix>person</mat-icon>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" style=\"display: block\">\r\n            <input\r\n              matInput\r\n              placeholder=\"Password\"\r\n              [type]=\"hide ? 'password' : 'text'\"\r\n              required\r\n              minlength=\"6\"\r\n              name=\"password\"\r\n              [(ngModel)]=\"loginUserData.password\"\r\n              #password=\"ngModel\"\r\n            />\r\n            <mat-error *ngIf=\"password.errors && password.errors.required\">\r\n              Password is required\r\n            </mat-error>\r\n            <mat-error *ngIf=\"password.errors && password.errors.minlength\">\r\n              Password must be of length 6\r\n            </mat-error>\r\n            <!-- \r\n            <button\r\n              mat-icon-button\r\n              matSuffix\r\n              (click)=\"hide = !hide\"\r\n              [attr.aria-label]=\"'Hide password'\"\r\n              [attr.aria-pressed]=\"hide\"\r\n            >\r\n              <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\r\n            </button> -->\r\n\r\n            <mat-icon matSuffix>lock</mat-icon>\r\n          </mat-form-field>\r\n\r\n          <!-- <mat-checkbox>Remember Me!</mat-checkbox> -->\r\n\r\n          <div align=\"end\">\r\n            <button\r\n              mat-raised-button\r\n              color=\"accent\"\r\n              class=\"login-button\"\r\n              (click)=\"btnLoginClick()\"\r\n            >\r\n              Login\r\n            </button>\r\n          </div>\r\n          <br />\r\n          <!-- <button mat-raised-button class=\"login-button\">\r\n            Login with Google\r\n          </button> -->\r\n        </form>\r\n      </div>\r\n    </mat-tab>\r\n    <mat-tab label=\"Register\">\r\n      <div class=\"formSpace\">\r\n        <form (ngSubmit)=\"registerFormSubmit()\">\r\n          <mat-form-field color=\"accent\" style=\"display: block\">\r\n            <input\r\n              matInput\r\n              placeholder=\"Username\"\r\n              type=\"text\"\r\n              required\r\n              name=\"username\"\r\n              [(ngModel)]=\"registerUserData.username\"\r\n              #username=\"ngModel\"\r\n            />\r\n            <mat-error *ngIf=\"username.errors && username.errors.required\">\r\n              Username is required\r\n            </mat-error>\r\n\r\n            <mat-icon matSuffix>email</mat-icon>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" style=\"display: block\">\r\n            <input\r\n              matInput\r\n              placeholder=\"Password\"\r\n              type=\"password\"\r\n              required\r\n              minlength=\"6\"\r\n              name=\"password\"\r\n              [(ngModel)]=\"registerUserData.password\"\r\n              #password=\"ngModel\"\r\n            />\r\n            <mat-error *ngIf=\"password.errors && password.errors.required\">\r\n              Password is required\r\n            </mat-error>\r\n            <mat-error *ngIf=\"password.errors && password.errors.minlength\">\r\n              Password must be of length 6\r\n            </mat-error>\r\n            <mat-icon matSuffix>lock</mat-icon>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field color=\"accent\" style=\"display: block\">\r\n            <input\r\n              matInput\r\n              placeholder=\"cPassword\"\r\n              type=\"password\"\r\n              required\r\n              minlength=\"6\"\r\n              name=\"cPassword\"\r\n              [(ngModel)]=\"registerUserData.cPassword\"\r\n              #cPassword=\"ngModel\"\r\n            />\r\n            <mat-error *ngIf=\"cPassword.errors && cPassword.errors.required\">\r\n              Password is required\r\n            </mat-error>\r\n            <mat-error *ngIf=\"cPassword.errors && cPassword.errors.minlength\">\r\n              Password must be of length 6\r\n            </mat-error>\r\n            <mat-icon matSuffix>lock</mat-icon>\r\n          </mat-form-field>\r\n\r\n          <div align=\"end\">\r\n            <button\r\n              mat-raised-button\r\n              color=\"accent\"\r\n              class=\"login-button\"\r\n              (click)=\"btnRegisterClick()\"\r\n            >\r\n              Register\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </mat-tab>\r\n  </mat-tab-group>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<h1>home works!</h1>\r\n<h2>for all users</h2>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  templateUrl: './contact.component.html',\r\n  styleUrls: ['./contact.component.css']\r\n})\r\nexport class ContactComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>contact works!</p>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n})\r\nexport class AppComponent {\r\n  title = 'FYP_FRONTEND';\r\n}\r\n","<app-nav-bar></app-nav-bar>\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private _auth: AuthService, private _route: Router) {}\r\n  canActivate(): boolean {\r\n    if (this._auth.loggedIn()) {\r\n      return true;\r\n    } else {\r\n      this._route.navigate(['/home']);\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MaterialModule } from './modules/material/material.module';\r\nimport { NavBarComponent } from './components/nav-bar/nav-bar.component';\r\nimport { RegisterLoginDialogComponent } from './components/register-login-dialog/register-login-dialog.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AuthService } from './services/auth.service';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { ContactComponent } from './components/contact/contact.component';\r\nimport { DiagnoseComponent } from './components/diagnose/diagnose.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavBarComponent,\r\n    RegisterLoginDialogComponent,\r\n    HomeComponent,\r\n    AboutComponent,\r\n    ContactComponent,\r\n    DiagnoseComponent,\r\n  ],\r\n\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MaterialModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n  ],\r\n  providers: [AuthGuard, AuthService],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { RegisterLoginDialogComponent } from '../register-login-dialog/register-login-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.css'],\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n  showButton: boolean = false;\r\n  token: any = '';\r\n\r\n  constructor(private _auth: AuthService, public dialog: MatDialog) {}\r\n\r\n  openRegisterLoginDialog() {\r\n    this.dialog.open(RegisterLoginDialogComponent);\r\n  }\r\n  logoutClick() {\r\n    console.log('logout');\r\n    localStorage.removeItem('token');\r\n    // console.log('=?>>>>>>>>>>>>>>> logout' + this.token);\r\n    window.location.reload();\r\n  }\r\n  ngOnInit(): void {\r\n    this.showButton = this._auth.loggedIn();\r\n    // this.token = localStorage.getItem('token');\r\n    // console.log('=?>>>>>>>>>>>>>>>' + this.token);\r\n  }\r\n}\r\n","<mat-toolbar color=\"primary\" class=\"navbar\">\r\n  <div>Solution Provider</div>\r\n  <div>\r\n    <button mat-raised-button color=\"primary\" routerLink=\"home\">Home</button>\r\n    <button mat-raised-button color=\"primary\" routerLink=\"about\">About</button>\r\n    <button mat-raised-button color=\"primary\" routerLink=\"contact\">\r\n      contact us\r\n    </button>\r\n    <button\r\n      mat-raised-button\r\n      color=\"primary\"\r\n      routerLink=\"diagnose\"\r\n      *ngIf=\"showButton\"\r\n    >\r\n      diagnose\r\n    </button>\r\n\r\n    <button\r\n      mat-raised-button\r\n      color=\"accent\"\r\n      (click)=\"openRegisterLoginDialog()\"\r\n      *ngIf=\"!showButton\"\r\n    >\r\n      Register/login\r\n    </button>\r\n    <button\r\n      mat-raised-button\r\n      color=\"accent\"\r\n      (click)=\"logoutClick()\"\r\n      *ngIf=\"showButton\"\r\n    >\r\n      Logout\r\n    </button>\r\n  </div>\r\n</mat-toolbar>\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Users } from '../models/user-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  //var\r\n  private _BASEURL: string = 'http://127.0.0.1:5000/api/';\r\n  //var\r\n  constructor(private http: HttpClient) {}\r\n\r\n  registerUser(data: object) {\r\n    return this.http.post<any>(this._BASEURL + 'register', data);\r\n  }\r\n\r\n  loginUser(data: Users) {\r\n    const headers = new HttpHeaders({\r\n      Authorization: 'Basic ' + btoa(data.username + ':' + data.password),\r\n    });\r\n\r\n    return this.http.get(this._BASEURL + 'login', { headers });\r\n  }\r\n\r\n  loggedIn() {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, empty } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ImageService {\r\n  //var\r\n  private _BASEURL: string = 'http://127.0.0.1:5000/api/';\r\n  //var\r\n  constructor(private http: HttpClient) {}\r\n\r\n  postImage(formData: FormData) {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      const headers = new HttpHeaders().set('x-access-token', token);\r\n      return this.http.post<any>(this._BASEURL + 'Image', formData, {\r\n        headers,\r\n      });\r\n    }\r\n    return empty();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AboutComponent } from './components/about/about.component';\r\nimport { ContactComponent } from './components/contact/contact.component';\r\nimport { DiagnoseComponent } from './components/diagnose/diagnose.component';\r\nimport { HomeComponent } from './components/home/home.component';\r\nimport { AuthGuard } from './guards/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent,\r\n    pathMatch: 'full',\r\n  },\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent,\r\n  },\r\n  {\r\n    // secure one\r\n    path: 'about',\r\n    component: AboutComponent,\r\n  },\r\n  {\r\n    path: 'contact',\r\n    component: ContactComponent,\r\n  },\r\n  {\r\n    path: 'diagnose',\r\n    component: DiagnoseComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}