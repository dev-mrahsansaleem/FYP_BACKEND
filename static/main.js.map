{"version":3,"sources":["./src/app/models/login.model.ts","./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/nav-bar/nav-bar.component.ts","./src/app/nav-bar/nav-bar.component.html","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/contact/contact.component.ts","./src/app/contact/contact.component.html","./src/app/models/register.model.ts","./src/app/report/report.component.ts","./src/app/report/report.component.html","./src/app/services/image.service.ts","./src/app/diagnose/diagnose.component.ts","./src/app/diagnose/diagnose.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class Login {\n    email: String;\n    password: String;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Register } from '../models/register.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  user: Register = new Register();\n  registerForm: FormGroup;\n  hide = true;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      'name': [this.user.name, [\n        Validators.required\n      ]],\n      'email': [this.user.email, [\n        Validators.required,\n        Validators.email\n      ]],\n      'password': [this.user.password, [\n        Validators.required,\n        Validators.minLength(6),\n        Validators.maxLength(30)\n      ]]\n    });\n  }\n\n  onRegisterSubmit() {\n    alert(this.user.name + ' ' + this.user.email + ' ' + this.user.password);\n  }\n\n}","<div class=\"medium-list\">\n    <div class=\"list-viewer-wrapper\">\n      <div class=\"list-header-title\"><b>Register</b></div>\n  \n      <form [formGroup]=\"registerForm\" (ngSubmit)=\"registerForm.valid && onRegisterSubmit()\" novalidate>\n        <div class=\"form-container\">\n          <mat-form-field>\n            <label style=\"margin-right: 5px; font-size: large;\"><b>Name:</b></label>\n            <input id=\"name\"\n                   matInput\n                   formControlName=\"name\"\n                   [(ngModel)]=\"user.name\"\n                   placeholder=\"Enter your name\"  style=\"height: 30px; width: 250px;\"/>\n          </mat-form-field>\n  \n          <mat-form-field>\n            <label style=\"margin-right: 5px; font-size: large;\"><b>Email:</b></label>\n              <input id=\"email\"\n                     matInput\n                     formControlName=\"email\"\n                     [(ngModel)]=\"user.email\"\n                     placeholder=\"Enter your email\"  style=\"height: 30px; width: 250px;\"/>\n            </mat-form-field>\n  \n          <mat-form-field>\n            <label style=\"margin-right: 5px; font-size: large;\"><b>Password:</b></label>\n              <input id=\"password\"\n                     matInput\n                     formControlName=\"password\"\n                     [(ngModel)]=\"user.password\"\n                     placeholder=\"Enter your password\"\n                     [type]=\"hide ? 'password':'text'\" style=\"height: 30px; width: 250px;\" />\n                <mat-icon matSuffix (click)=\"hide = !hide\">\n                  {{hide ? 'visibility' : 'visibility_off'}}\n                </mat-icon>\n            </mat-form-field>\n  \n            <button mat-button type=\"submit\" \n                    class=\"mat-raised-button mat-primary\" \n                    [disabled]=\"!registerForm.valid\">Register</button>\n            <button mat-button routerLink=\"/login\" class=\"divider\">Login</button>\n        </div>\n      </form>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.scss']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <mat-toolbar-row>\n      <button mat-button routerLink=\"/\"> Home</button>\n      <button mat-button routerLink=\"/about\">About</button>\n      <button mat-button routerLink=\"/contact\">Contact Us</button>\n      <button mat-button routerLink=\"/diagnose\">DiagnoseDisease</button>\n      <button mat-button routerLink=\"/report\">Report</button>\n      \n      <span class=\"spacer\"></span>\n      <button mat-button routerLink=\"/register\">Register</button>\n      <button mat-button routerLink=\"/login\">Login</button>\n    </mat-toolbar-row>\n  </mat-toolbar>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n  \n\n}\n","<p>about works</p>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  title = 'HELOO ANGULAR';\n  serverData: JSON;\n  constructor() {}\n\n  ngOnInit(): void {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n  }\n}\n","<app-nav-bar></app-nav-bar>\n<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { HomeComponent } from './home/home.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { AboutComponent } from './about/about.component';\nimport { ContactComponent } from './contact/contact.component';\n\nimport { DiagnoseComponent } from './diagnose/diagnose.component';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { ReportComponent } from './report/report.component';\nimport { ImageService } from './services/image.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    NavBarComponent,\n    AboutComponent,\n    ContactComponent,\n    DiagnoseComponent,\n    ReportComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatFormFieldModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    NoopAnimationsModule,\n  ],\n  providers: [ImageService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss']\n})\nexport class ContactComponent implements OnInit {\n  form: FormGroup;\n  name: FormControl = new FormControl(\"\", [Validators.required]);\n  email: FormControl = new FormControl(\"\", [Validators.required, Validators.email]);\n  message: FormControl = new FormControl(\"\", [Validators.required, Validators.maxLength(256)]);\n  honeypot: FormControl = new FormControl(\"\"); // we will use this to prevent spam\n  submitted: boolean = false; // show and hide the success message\n  isLoading: boolean = false; // disable the submit button if we're loading\n  responseMessage: string; // the response message to show to the user\n\n  constructor(private formBuilder: FormBuilder, private http: HttpClient) { \n    this.form = this.formBuilder.group({\n      name: this.name,\n      email: this.email,\n      message: this.message,\n      honeypot: this.honeypot\n    });\n  }\n\n  ngOnInit(): void {\n  }\n  onSubmit() {\n    if (this.form.status == \"VALID\" && this.honeypot.value == \"\") {\n      this.form.disable(); // disable the form if it's valid to disable multiple submissions\n      var formData: any = new FormData();\n      formData.append(\"name\", this.form.get(\"name\").value);\n      formData.append(\"email\", this.form.get(\"email\").value);\n      formData.append(\"message\", this.form.get(\"message\").value);\n      this.isLoading = true; // sending the post request async so it's in progress\n      this.submitted = false; // hide the response message on multiple submits\n      this.http.post(\"YOUR GOOGLE WEB APP URL HERE\", formData).subscribe(\n        (response) => {\n          // choose the response message\n          if (response[\"result\"] == \"success\") {\n            this.responseMessage = \"Thanks for the message! I'll get back to you soon!\";\n          } else {\n            this.responseMessage = \"Oops! Something went wrong... Reload the page and try again.\";\n          }\n          this.form.enable(); // re enable the form after a success\n          this.submitted = true; // show the response message\n          this.isLoading = false; // re enable the submit button\n          console.log(response);\n        },\n        (error) => {\n          this.responseMessage = \"Oops! An error occurred... Reload the page and try again.\";\n          this.form.enable(); // re enable the form after a success\n          this.submitted = true; // show the response message\n          this.isLoading = false; // re enable the submit button\n          console.log(error);\n        }\n      );\n    }\n  }\n}\n","<h1 style=\"text-align: center;\"><b>Contact US</b></h1>\n<form class=\"contact\" [formGroup]=\"form\" method=\"post\" (ngSubmit)=\"onSubmit()\" style=\"align-content: center;\">\n    <mat-form-field >\n      <label style=\"font-size: large;\"><b>Name</b></label>\n      <input matInput [formControl]=\"name\" required>\n      <mat-error *ngIf=\"name.invalid\">Please enter your name</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <label style=\"font-size: large;\"><b>Email</b></label>\n      <input matInput [formControl]=\"email\" placeholder=\"email@example.com\" required>\n      <mat-error *ngIf=\"email.invalid\">Please enter a valid email</mat-error>\n    </mat-form-field>\n    <mat-form-field>\n      <label style=\"font-size: large;\"><b>Message</b></label>\n      <textarea matInput [formControl]=\"message\" maxlength=\"256\" placeholder=\"I'm interested in...\" required style='height: 70px; width: 300px;'></textarea>\n      <mat-hint > {{message.value?.length || 0}}/256</mat-hint>\n      <mat-error *ngIf=\"message.invalid\">Please enter a message</mat-error>\n    </mat-form-field>\n    <button [disabled]=\"isLoading\" class=\"submit\" type=\"submit\" style=\"font: large;\"><b>Submit</b></button>\n    <input [formControl]=\"honeypot\" class=\"hidden\" type=\"text\" />\n    <div [ngClass]=\"!submitted? 'hidden' : 'visible'\" class=\"center-text\">\n      <span>{{responseMessage}}</span>\n    </div>\n  </form>","export class Register{\n        name: String;\n        email: String;\n        password: String;    \n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.scss']\n})\nexport class ReportComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col\">\n      <h1>Header</h1>\n    </div>\n    <div class=\"w-100\"></div>\n    <div class=\"col\">\n      <h1>Nav bar</h1>\n    </div>\n    <div class=\"w-100\"></div>\n    <div class=\"col m-5\">\n      <div class=\"d-flex justify-content-center\">\n        <div class=\"col\">\n          <h4>REPORT</h4>\n        </div>\n        <div class=\"col\">\n          <h4>Date: <span>custom date</span></h4>\n        </div>\n      </div>\n      <div class=\"container\">\n        <div class=\"row p-2 border rounded\">\n          <div class=\"col\"><h3>Name: XYZ</h3></div>\n          <div class=\"col\"><h3>Gender: XYZ</h3></div>\n          <div class=\"w-100\"></div>\n          <div class=\"col\"><h3>Age: 00 Years</h3></div>\n          <div class=\"col\"><h3>CNIC: XXXXX-XXXXX-X</h3></div>\n          <div class=\"w-100\"></div>\n\n          <div class=\"col\">\n            <div class=\"container border rounded mt-5 p-2\">\n              <div class=\"row\">\n                <div class=\"col-6\">\n                  <h3>Segmented Part:</h3>\n                </div>\n                <div class=\"col-6\">\n                  <img src=\"...\" alt=\"...\" class=\"img-thumbnail\" />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"w-100\"></div>\n\n          <div class=\"col\">\n            <div class=\"container border rounded mt-5 p-2\">\n              <div class=\"row\">\n                <div class=\"col-6\">\n                  <h3>Effected Part:</h3>\n                </div>\n                <div class=\"col-6\">\n                  <img src=\"...\" alt=\"...\" class=\"img-thumbnail\" />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"w-100\"></div>\n\n          <div class=\"col\">\n            <div class=\"container border rounded mt-5 p-2\">\n              <div class=\"row\">\n                <div class=\"col-6\">\n                  <h3>Stage:</h3>\n                </div>\n                <div class=\"col-6\">\n                  <img src=\"...\" alt=\"...\" class=\"img-thumbnail\" />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"w-100\"></div>\n\n          <div class=\"col\">\n            <div class=\"container border rounded mt-5 p-2\">\n              <div class=\"row\">\n                <div class=\"col-6\">\n                  <h3>Result:</h3>\n                </div>\n                <div class=\"col-6\">\n                  <p>Some text will go here that will show result</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"w-100\"></div>\n\n          <div class=\"col\">\n            <div class=\"container border rounded mt-5 p-2\">\n              <div class=\"row\">\n                <div class=\"col-6\">\n                  <h3>Defected Portion:</h3>\n                </div>\n                <div class=\"col-6\">\n                  <img src=\"...\" alt=\"...\" class=\"img-thumbnail\" />\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"w-100\"></div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"w-100\"></div>\n    <div class=\"col\">\n      <h1>Footer</h1>\n    </div>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ImageService {\n  baseURL: string = 'http://127.0.0.1:5000/api';\n\n  postImage(formData: FormData) {\n    return this.http.post(this.baseURL + '/uploadImage', formData);\n  }\n\n  constructor(private http: HttpClient) {}\n}\n","import { Component } from '@angular/core';\nimport { ImageService } from '../services/image.service';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-diagnose',\n  templateUrl: './diagnose.component.html',\n  styleUrls: ['./diagnose.component.scss'],\n})\nexport class DiagnoseComponent {\n  ImageForm: FormGroup = new FormGroup({\n    image: new FormControl(null),\n  });\n\n  imageFile: { file: any; name: string };\n\n  onImageSelect(event) {\n    console.log('image select call hua');\n    if (event.target.files.length > 0) {\n      const file = event.target.files[0];\n      this.ImageForm.get('image').setValue(file.filename);\n      const reader = new FileReader();\n\n      reader.onload = (_event) => {\n        this.imageFile = {\n          file: file,\n          name: file.filename,\n        };\n      };\n\n      console.log(event.srcElement.files[0]);\n      console.log(file);\n      reader.readAsDataURL(file);\n    }\n  }\n  submitImageForm() {\n    console.log('form submit hua');\n    const formData = new FormData();\n    formData.append('file', this.ImageForm.get('image').value);\n    this.imageSer.postImage(formData).subscribe();\n  }\n\n  constructor(private imageSer: ImageService) {}\n\n  ngOnInit(): void {}\n}\n","<h2><b>Instructions To Upload Image</b></h2>\n<div class=\"container\" style=\"font-size: 15px\">\n  <ul>\n    <li>Image will be fMRI or MRI.</li>\n    <li>Image size will be only 25MB.</li>\n    <li>Image must be clear.</li>\n    <li>You can upload image and see the results of Alzeimer's Disease.</li>\n  </ul>\n</div>\n<img\n  class=\"img-responsive\"\n  src=\"assets/images/thinkpng.jpg\"\n  style=\"height: 300\"\n  width=\"500\"\n/>\n\n<!-- \n<div class=\"container\">\n  <span style=\"color: red\" *ngIf=\"message\">{{ message }}</span>\n  <input\n    #file\n    type=\"file\"\n    accept=\"image/*\"\n    (change)=\"preview(file.files)\"\n    style=\"font-size: 20px\"\n  />\n  <br />\n  <br />\n  <img [src]=\"imgURLs\" height=\"200\" *ngIf=\"imgURLs\" />\n</div>\n\n<p>{{ imgURLs }}</p>\n<button mat-button routerLink=\"/report\">Check this</button>\n<br />\n<input type=\"file\" name=\"image\" (change)=\"onFileSelect($event)\" />\n<button type=\"button\" (click)=\"onUpload()\">Send to server</button> -->\n<br /><br /><br />\n\n<div class=\"container\">\n  <form [formGroup]=\"ImageForm\" (ngSubmit)=\"submitImageForm()\">\n    <div class=\"form-group form-row\">\n      <label>select an image </label>\n      <br />\n      <input\n        type=\"file\"\n        id=\"image\"\n        formControlName=\"image\"\n        accept=\"image/*\"\n        (change)=\"onImageSelect($event)\"\n      />\n    </div>\n\n    <div class=\"form-group form-row\">\n      <!-- <label>select an image</label> -->\n      <input type=\"submit\" class=\"btn btn-primary\" />\n    </div>\n  </form>\n</div>\n\n<br /><br /><br />\n","import { Component, NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { from } from 'rxjs';\nimport { HomeComponent } from './home/home.component';\nimport{ RegisterComponent}from './register/register.component';\nimport { LoginComponent} from './login/login.component';\nimport { AboutComponent} from './about/about.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { DiagnoseComponent} from './diagnose/diagnose.component';\nimport { ReportComponent } from './report/report.component';\n\n\nconst routes: Routes = [{\n  path:'',\n  component:HomeComponent\n},\n{\n  path:'register',\n  component:RegisterComponent\n},\n{\n  path:'report',\n  component:ReportComponent\n},\n{\npath:'login',\ncomponent:LoginComponent\n},\n{\npath:'about',\ncomponent:AboutComponent\n},\n{\n  path:'contact',\n  component:ContactComponent\n},\n{\n  path:'diagnose',\n  component:DiagnoseComponent\n},\n\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","  \nimport { Component, OnInit } from '@angular/core';\nimport { Login } from '../models/login.model';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  user: Login = new Login();\n  loginForm: FormGroup;\n  hide = true;\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      'email': [this.user.email, [\n        Validators.required,\n        Validators.email\n      ]],\n      'password': [this.user.password, [\n        Validators.required,\n        Validators.minLength(6),\n        Validators.maxLength(30)\n      ]]\n    });\n  }\n\n  onLoginSubmit() {\n    alert(this.user.email + ' ' + this.user.password);\n  }\n\n}","<div class=\"medium-list\">\n  <div class=\"list-viewer-wrapper\">\n    <div class=\"list-header-title\"><b>Login</b></div>\n\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginForm.valid && onLoginSubmit()\" novalidate>\n      <div class=\"form-container\">  \n        <mat-form-field>\n          <label style=\"font-size: large; margin-right: 5px;\"><b>Email:</b></label>\n            <input id=\"email\"\n                   matInput\n                   formControlName=\"email\"\n                   [(ngModel)]=\"user.email\"\n                   placeholder=\"Enter your email\"  style=\"height: 30px; width: 250px;\"/>\n          </mat-form-field>\n\n        <mat-form-field>\n          <label  style=\"font-size: large; margin-right: 5px;\"><b>Password:</b></label>\n            <input id=\"password\"\n                   matInput\n                   formControlName=\"password\"\n                   [(ngModel)]=\"user.password\"\n                   placeholder=\"Enter your password\"\n                   [type]=\"hide ? 'password':'text'\"   style=\"height: 30px; width: 250px;\"/>\n              <mat-icon matSuffix (click)=\"hide = !hide\">\n                {{hide ? 'visibility' : 'visibility_off'}}\n              </mat-icon>\n          </mat-form-field>\n\n          <button mat-button type=\"submit\" \n                  class=\"mat-raised-button mat-primary\" \n                  [disabled]=\"!loginForm.valid\">Login</button>\n          <button mat-button routerLink=\"/register\" class=\"divider\">Register</button>\n      </div>\n    </form>\n  </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}